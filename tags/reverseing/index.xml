<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>reverseing on Fang Yuan</title>
    <link>https://duythucne22.github.io/tags/reverseing/</link>
    <description>Recent content in reverseing on Fang Yuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>hcdtdayneg@gmail.com (d.thuc)</managingEditor>
    <webMaster>hcdtdayneg@gmail.com (d.thuc)</webMaster>
    <copyright>Â©2024, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 28 Sep 2023 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://duythucne22.github.io/tags/reverseing/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Wanna Game CTF by UIT 2023</title>
        <link>https://duythucne22.github.io/posts/2023/wannagame2023/</link>
        <pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Thu, 28 Sep 2023 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2023/wannagame2023/</guid>
        <description></description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/Dice.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Google CTF 2023</title>
        <link>https://duythucne22.github.io/posts/2023/googlectf2023/</link>
        <pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Wed, 28 Jun 2023 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2023/googlectf2023/</guid>
        <description></description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/google.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Amateurs CTF 2023</title>
        <link>https://duythucne22.github.io/posts/2023/amateursctf2023/</link>
        <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Tue, 28 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2023/amateursctf2023/</guid>
        <description></description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/Dice.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>CORCTF2022</title>
        <link>https://duythucne22.github.io/posts/2022/corctf2022/</link>
        <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Tue, 28 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2022/corctf2022/</guid>
        <description>Microsoft Linux Description:
Microsoft&amp;rsquo;s latest addition to the world of Open Source: a flag checker&amp;hellip;
Attachment file:
m&amp;lt;3l.exe
Open file with DiE:
elf file but end with .exe. run in linux env
lib elf.dll usage
inital code view
Take our input and store in byte_100111 loop 18 times, take each char from our input then rol 0xd and compare with byte_100210.
After check return Incorect :( or $Well done! Sadly, Microsoft has embraced, extended and extinguished the other half of the flag :(&amp;hellip;</description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/Dice.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Google CTF 2022</title>
        <link>https://duythucne22.github.io/posts/2022/googlectf2022/</link>
        <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Tue, 21 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2022/googlectf2022/</guid>
        <description>Google CTF 2022 - FixedASLR Reference source https://chovid99.github.io/posts/google-ctf-2022/
https://github.com/nobodyisnobody/write-ups/tree/main/Google.CTF.2022/pwn/FixedASLR
Original challenge link: https://capturetheflag.withgoogle.com/challenges/pwn-fixedaslr
You can also download challenge files in my repo: fixedaslr.zip
Download and extract the zip, then we can get started!
1. Find bug First, let&amp;rsquo;s check the basic information of all files:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 $ file * loader: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, BuildID[sha1]=71086f1a8e8132c20313b70de229555e4f551144, not stripped basic.</description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/Dice.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>HCMUS CTF 2022</title>
        <link>https://duythucne22.github.io/posts/2022/hcmusctf2022/</link>
        <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Sun, 12 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2022/hcmusctf2022/</guid>
        <description>HCMUS CTF 2022 - Timehash You can download the zip in my repo: Timehash.zip
There will be 1 file in zip:
timehash 1. Analyze This is a forensic challenge so we don&amp;rsquo;t need to use checksec, just decompile the file with ghidra to get the flow. First, we will look at main:
It will check if argc is equal to 2 or not and will exit if not. Nothing to notice.</description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/Dice.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>DownUnder CTF 2022 Writeups</title>
        <link>https://duythucne22.github.io/posts/2022/downunderctf2022/</link>
        <pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Wed, 08 Jun 2022 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/2022/downunderctf2022/</guid>
        <description></description>
        
        <dc:creator>f4ng yu4n</dc:creator>
        <media:content url="https://duythucne22.github.io/images/ctf/Dice.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>RE</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Reversing.kr Training Writeups</title>
        <link>https://duythucne22.github.io/posts/reversing.kr/</link>
        <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
        <author>hcdtdayneg@gmail.com (d.thuc)</author>
        <atom:modified>Thu, 10 Feb 2022 00:00:00 +0000</atom:modified>
        <guid>https://duythucne22.github.io/posts/reversing.kr/</guid>
        <description>Reversing.kr practice Write-up Easy Crack - 100pts Initial analysis with DiE , we have a PE32 file
Open with IDA, at function DialogFunc have sub_401080, use winapi GetDlgItemTextA and MessageBoxA, take value from input to String, comapre then message.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 int __cdecl sub_401080(HWND hDlg) { CHAR String[97]; // [esp+4h] [ebp-64h] BYREF __int16 v3; // [esp+65h] [ebp-3h] char v4; // [esp+67h] [ebp-1h] memset(String, 0, sizeof(String)); v3 = 0; v4 = 0; GetDlgItemTextA(hDlg, 1000, String, 100); if ( String[1] !</description>
        
        <dc:creator>fang yuan</dc:creator>
        
        
        
        
          
            
              <category>practice</category>
            
          
            
              <category>reverseing</category>
            
          
            
              <category>writeups</category>
            
          
        
        
          
            
              <category>Writeup</category>
            
          
        
        
          
            
              <category>trainning</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
